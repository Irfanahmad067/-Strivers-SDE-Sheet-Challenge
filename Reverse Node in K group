int len(Node*head){
	if(head==NULL) return 0;
	return 1+len(head->next);
}
Node*reverse(Node*head){
	if(head==NULL || head->next==NULL) return head;
	Node*temp=reverse(head->next);
	head->next->next=head;
	head->next=NULL;
	return temp;
}
Node*reverseByVariablePos(Node*head,int ind,int n,int b[]){
	if(ind==n || head==NULL) return head;
	if(len(head) < b[ind]){
		return reverse(head);
	}
	if (b[ind] == 0) return reverseByVariablePos(head, ind + 1, n, b);
	Node*prev=NULL;
	Node*curr=head;
	Node*nexx;
	
        for (int i = 1; i <= b[ind]; i++) {
          nexx = curr->next;
          curr->next = prev;
          prev = curr;
          curr = nexx;
        }
    Node*temp=reverseByVariablePos(curr,ind+1,n,b);
	head->next=temp;
	return prev;
}
Node *getListAfterReverseOperation(Node *head, int n, int b[]){
	return reverseByVariablePos(head,0,n,b);
}
