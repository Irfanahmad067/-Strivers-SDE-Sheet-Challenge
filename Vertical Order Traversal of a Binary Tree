void helper(TreeNode*root,int side,int level,map<int,vector<pair<int ,int>>>&mp){
    if(root==NULL) return ;
    helper(root->left,side-1,level+1,mp);
    mp[side].push_back({level,root->val});
    helper(root->right,side+1,level+1,mp);
}
 static bool cmp(pair<int,int>&a,pair<int,int>&b){
      if(a.first==b.first) return a.second < b.second;
      return a.first < b.first;
 }
    vector<vector<int>> verticalTraversal(TreeNode* root) {
     vector<vector<int>>ans;
     map<int,vector<pair<int,int>>>mp;
     helper(root,0,0,mp);
     for(auto it:mp){
         auto vec=it.second;
         sort(vec.begin(),vec.end(),cmp);
         vector<int>temp;
         for(int i=0;i<vec.size();i++){
             temp.push_back(vec[i].second);
         }
         ans.push_back(temp);
     }
     return ans;
    }
