
vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    vector<int>ans;
    if(root==NULL) return ans;
    queue<BinaryTreeNode<int> *>q;
    q.push(root);
    int level=-1;
    while(!q.empty()){
      int size=q.size();
      level++;
      vector<int>temp;
      for(int i=0;i<size;i++){
          BinaryTreeNode<int> *t=q.front();
          q.pop();
          temp.push_back(t->data);
          if(t->left) q.push(t->left);
          if(t->right)q.push(t->right);
      }
      if(level%2!=0){
          for(int i=temp.size()-1;i>=0;i--){
              ans.push_back(temp[i]);
          }
      }
      else {
          for(int i=0;i<temp.size();i++){
              ans.push_back(temp[i]);
          }
      }

    }
    return ans;
}
;
