void helper(BinaryTreeNode<int>* root,int side,int level,map<int,pair<int,int>>&mp){
    if(root==NULL){
        return ;
    }
    helper(root->left,side-1,level+1,mp);
   if(mp.find(side)==mp.end()){
       mp[side]={root->data,level};
    } 
    else{
        if(level >= mp[side].second)
        mp[side]={root->data,level};
    }
    
    helper(root->right,side+1,level+1,mp);
   
       
}
vector<int> bottomView(BinaryTreeNode<int> * root){
      vector<int>ans;
      map<int,pair<int,int>>mp;
      helper(root,0,0,mp);
      for(auto it:mp){
         ans.push_back(it.second.first);
      }
      return ans;   
}
